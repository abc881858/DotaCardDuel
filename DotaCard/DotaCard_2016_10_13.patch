Index: card.cpp
===================================================================
--- card.cpp	(版本 16)
+++ card.cpp	(工作副本)
@@ -1,10 +1,10 @@
 #include "card.h"
-#include <QPainter>
-#include <QMetaObject>
-#include <QGraphicsSceneMouseEvent>
 #include "net.h"
 #include "rule.h"
+#include <QGraphicsSceneMouseEvent>
 #include <QMatrix>
+#include <QMetaObject>
+#include <QPainter>
 
 Card::Card()
 {
@@ -297,12 +297,12 @@
         case 2:
             if (currentflag == NormalSummon)
             {
-//                Rule::instance()->setOneTurnOneNormalSummon(false);
+                Rule::instance()->setOneTurnOneNormalSummon(false);
                 emit normalSummon();
             }
             else if (currentflag == SetCard)
             {
-//                Rule::instance()->setOneTurnOneNormalSummon(false);
+                Rule::instance()->setOneTurnOneNormalSummon(false);
                 emit setCard();
             }
             else if (currentflag == Effect)
@@ -344,6 +344,11 @@
     index = value;
 }
 
+QString Card::getDescription() const
+{
+    return description;
+}
+
 bool Card::getChangePosition() const
 {
     return changePosition;
@@ -385,43 +390,43 @@
     {
     case 1:
         //DeckArea
-        setTransform(QTransform::fromScale( 50.0/width, 72.0/height), false);
+        setTransform(QTransform::fromScale(50.0 / width, 72.0 / height), false);
         break;
     case 2:
         //HandArea
-        setTransform(QTransform::fromScale( 100.0/width, 145.0/height), false);
+        setTransform(QTransform::fromScale(100.0 / width, 145.0 / height), false);
         break;
     case 3:
         //FieldyardArea
-        setTransform(QTransform::fromScale( 50.0/width, 72.0/height), false);
+        setTransform(QTransform::fromScale(50.0 / width, 72.0 / height), false);
         break;
     case 4:
         //FieldgroundArea
-        setTransform(QTransform::fromScale( 50.0/width, 72.0/height), false);
+        setTransform(QTransform::fromScale(50.0 / width, 72.0 / height), false);
         break;
     case 5:
         //GraveyardArea
-        setTransform(QTransform::fromScale( 50.0/width, 72.0/height), false);
+        setTransform(QTransform::fromScale(50.0 / width, 72.0 / height), false);
         break;
     case 6:
         //EnemyDeckArea
-        setTransform(QTransform::fromScale( 50.0/width, 72.0/height), false);
+        setTransform(QTransform::fromScale(50.0 / width, 72.0 / height), false);
         break;
     case 7:
         //EnemyHandArea
-        setTransform(QTransform::fromScale( 100.0/width, 145.0/height), false);
+        setTransform(QTransform::fromScale(100.0 / width, 145.0 / height), false);
         break;
     case 8:
         //EnemyFieldyardArea
-        setTransform(QTransform::fromScale( 50.0/width, 72.0/height), false);
+        setTransform(QTransform::fromScale(50.0 / width, 72.0 / height), false);
         break;
     case 9:
         //EnemyFieldgroundArea
-        setTransform(QTransform::fromScale( 50.0/width, 72.0/height), false);
+        setTransform(QTransform::fromScale(50.0 / width, 72.0 / height), false);
         break;
     case 10:
         //EnemyGraveyardArea
-        setTransform(QTransform::fromScale( 50.0/width, 72.0/height), false);
+        setTransform(QTransform::fromScale(50.0 / width, 72.0 / height), false);
         break;
     default:
         break;
@@ -428,16 +433,6 @@
     }
 }
 
-QString Card::getDescription() const
-{
-    return description;
-}
-
-void Card::setDescription(const QString& value)
-{
-    description = value;
-}
-
 bool Card::getFace() const
 {
     return face;
@@ -446,7 +441,7 @@
 void Card::setFace(bool value)
 {
     face = value;
-    if(face)
+    if (face)
     {
         setPixmap(QPixmap(QString(":/pic/monster/%1.jpg").arg(name)));
     }
@@ -464,7 +459,7 @@
 void Card::setStand(bool value)
 {
     stand = value;
-    if(stand)
+    if (stand)
     {
         //
     }
@@ -471,13 +466,13 @@
     else
     {
         setTransformationMode(Qt::SmoothTransformation);
-        if(face)
+        if (face)
         {
-            setTransformOriginPoint(290,415);
+            setTransformOriginPoint(290, 415);
         }
         else
         {
-            setTransformOriginPoint(100,145);
+            setTransformOriginPoint(100, 145);
         }
         setRotation(-90);
     }
@@ -505,6 +500,7 @@
     DEF = 1800;
     level = 3;
     attribute = Earth;
+    description = tr("CentaurWarrunner");
 }
 
 bool CentaurWarrunner::testEffect()
@@ -518,6 +514,7 @@
         /// 鍒欏彲浠ユ敼涓轰涪寮冧竴寮犳墜鐗屽彂鍔?
         if (phase == Rule::yourBP)
         {
+            //            prepareActive = 1;
             return true;
         }
 
@@ -527,6 +524,7 @@
         /// 鍚屾椂浠よ嚜宸卞満涓婂悕瀛楀甫鏈夆€渄ota鈥濈殑鎬吔鐨勬敾鍑诲姏锛堟垨闃插尽鍔涳級涓婂崌鑷繁鍘熸湰鏀诲嚮鍔涳紙鎴栭槻寰″姏锛夌殑涓€鍗娿€?
         if (phase == Rule::myM1 || phase == Rule::myM2)
         {
+            //            prepareActive = 2;
             return true;
         }
     }
@@ -543,6 +541,7 @@
     ATK = 800;
     DEF = 300;
     level = 3;
+    description = tr("KeeperoftheLight");
 }
 
 Lion::Lion() //鎭堕瓟宸笀
@@ -554,6 +553,7 @@
     ATK = 1300;
     DEF = 700;
     level = 4;
+    description = tr("Lion");
 }
 
 Magnus::Magnus() //鍗婁汉鐚涚姼
@@ -565,6 +565,7 @@
     ATK = 1700;
     DEF = 700;
     level = 4;
+    description = tr("Magnus");
 }
 
 NyxAssassin::NyxAssassin() //鍦扮┐鍒哄
@@ -576,6 +577,7 @@
     ATK = 1500;
     DEF = 800;
     level = 4;
+    description = tr("NyxAssassin");
 }
 
 Rubick::Rubick() //澶ч瓟瀵煎笀
@@ -587,6 +589,7 @@
     ATK = 900;
     DEF = 300;
     level = 4;
+    description = tr("Rubick");
 }
 
 Tusk::Tusk() //宸ㄧ墮娴锋皯
@@ -598,6 +601,7 @@
     ATK = 1800;
     DEF = 1000;
     level = 4;
+    description = tr("Tusk");
 }
 
 Undying::Undying() //涓嶆溄灏哥帇
@@ -609,6 +613,7 @@
     ATK = 1100;
     DEF = 1300;
     level = 3;
+    description = tr("Undying");
 }
 
 VengefulSpirit::VengefulSpirit() //澶嶄粐涔嬮瓊
@@ -620,6 +625,7 @@
     ATK = 1200;
     DEF = 500;
     level = 3;
+    description = tr("VengefulSpirit");
 }
 
 Zeus::Zeus() //濂ユ灄鍖规柉涔嬬帇
@@ -631,4 +637,5 @@
     ATK = 500;
     DEF = 350;
     level = 2;
+    description = tr("Zeus");
 }
Index: card.h
===================================================================
--- card.h	(版本 16)
+++ card.h	(工作副本)
@@ -132,9 +132,6 @@
     int getArea() const;
     void setArea(int value);
 
-    QString getDescription() const;
-    void setDescription(const QString& value);
-
     bool getFace() const;
     void setFace(bool value);
 
@@ -160,6 +157,8 @@
     int getIndex() const; //area 闇€瑕佽繖涓嚱鏁?
     void setIndex(int value);
 
+    QString getDescription() const;
+
 protected:
     void hoverEnterEvent(QGraphicsSceneHoverEvent*);
     void hoverLeaveEvent(QGraphicsSceneHoverEvent*);
@@ -173,9 +172,10 @@
     int level;
     int attribute;
     int index; //浠庡乏寰€鍙虫暟绗嚑寮?绗?寮犳槸index==0)
+//    int prepareActive; //鍑嗗鍙戝姩鐨勭壒娈婃晥鏋?
+    QString description; //鍗＄墝鎻忚堪
 
 private:
-    QString description; //鍗＄墝鎻忚堪
     int area; //鍗＄墝浣嶇疆锛屾瘮濡傚湪鎵嬩笂鎴栬€呭湪鍓嶅満
     bool face; // 鍗＄墝琛ㄤ晶琛ㄧず鎴栬€呴噷渚ц〃绀?
     bool stand; // 鍗＄墝鏀诲嚮琛ㄧず鎴栬€呴槻寰¤〃绀?
Index: DotaCard.pro
===================================================================
--- DotaCard.pro	(版本 16)
+++ DotaCard.pro	(工作副本)
@@ -50,3 +50,5 @@
 win32 {
 QMAKE_CXXFLAGS+=/wd"4819"
 }
+
+TRANSLATIONS += dc_zh_cn.ts
Index: main.cpp
===================================================================
--- main.cpp	(版本 16)
+++ main.cpp	(工作副本)
@@ -1,9 +1,10 @@
+#include "engine.h"
+#include "mainwindow.h"
 #include <QApplication>
 #include <QFile>
 #include <QTextStream>
+#include <QTranslator>
 #include <QtDebug>
-#include "engine.h"
-#include "mainwindow.h"
 
 void myMessageOutput(QtMsgType type, const QMessageLogContext& context, const QString& msg)
 {
@@ -39,6 +40,11 @@
     qInstallMessageHandler(myMessageOutput);
 
     QApplication a(argc, argv);
+    QTranslator translator;
+    if (translator.load("dc_zh_cn"))
+    {
+        a.installTranslator(&translator);
+    }
 
     Engine::instance()->loadAllCards();
 
Index: mainwindow.cpp
===================================================================
--- mainwindow.cpp	(版本 16)
+++ mainwindow.cpp	(工作副本)
@@ -1,8 +1,8 @@
 #include "mainwindow.h"
 #include "ui_mainwindow.h"
 
+#include <QBrush>
 #include <QPalette>
-#include <QBrush>
 #include <QPixmap>
 
 #include "net.h"
@@ -33,12 +33,12 @@
     ui->roomView->setScene(roomScene);
     ui->roomView->setSceneRect(0, 0, 550, 600);
 
-    connect(roomScene, &RoomScene::hover, [=](QString name)
-        {
-            //棣栧厛涓€寮犲崱琚玥over锛屽乏涓婅澶у浘鑲畾瑕佹洿鏂?
-            //浣嗗鏂圭殑锛堥櫎鍓嶅悗鍦虹殑face-up鍗★級涓嶈鏄剧ず锛屾垜鏂瑰崱缁勪篃涓嶈鏄剧ず
-            ui->label->setStyleSheet(QString("image: url(:/pic/monster/%1.jpg)").arg(name));
-        });
+    connect(roomScene, &RoomScene::hover, [=](QString name,QString description) {
+        //棣栧厛涓€寮犲崱琚玥over锛屽乏涓婅澶у浘鑲畾瑕佹洿鏂?
+        //浣嗗鏂圭殑锛堥櫎鍓嶅悗鍦虹殑face-up鍗★級涓嶈鏄剧ず锛屾垜鏂瑰崱缁勪篃涓嶈鏄剧ず
+        ui->label->setStyleSheet(QString("image: url(:/pic/monster/%1.jpg)").arg(name));
+        ui->textEdit->setText(description);
+    });
 }
 
 MainWindow::~MainWindow()
@@ -45,32 +45,3 @@
 {
     delete ui;
 }
-
-//void MainWindow::battleYourPhase()
-//{
-//    Rule::instance()->setPhase(Rule::yourBP);
-//    //濡傛灉鍓嶅悗鍦洪兘娌℃湁鍗★紝灏辨樉绀哄璇濇浜?
-//    QMessageBox msgBox(this);
-//    msgBox.setText("dui fang jin ru zhan dou liu cheng.");
-//    msgBox.setInformativeText("qing wen fa dong ka pian te xiao ma?");
-//    msgBox.setStandardButtons(QMessageBox::Ok | QMessageBox::Cancel);
-//    int ret = msgBox.exec();
-//    if (ret == QMessageBox::Close)
-//    {
-//        //        Net::instance()->sendMessage(0);
-//    }
-//    else
-//    {
-//        Rule::instance()->setIsResponsing(true);
-//    }
-//}
-
-//void MainWindow::doGetResponse()
-//{
-//    Rule::instance()->setIsWaiting(false);
-//}
-
-//void MainWindow::doActionCommand(int parameter, int index)
-//{
-//    roomScene->doActionCommand(parameter, index);
-//}
Index: mainwindow.ui
===================================================================
--- mainwindow.ui	(版本 16)
+++ mainwindow.ui	(工作副本)
@@ -169,7 +169,8 @@
           </size>
          </property>
          <property name="styleSheet">
-          <string notr="true">background-color: rgb(255, 240, 180);</string>
+          <string notr="true">background-color: rgb(255, 240, 180);
+image: url(:/pic/monster/NULL.jpg);</string>
          </property>
          <property name="text">
           <string/>
Index: roomscene.cpp
===================================================================
--- roomscene.cpp	(版本 16)
+++ roomscene.cpp	(工作副本)
@@ -132,7 +132,8 @@
         connect(card, &Card::hover, [=]()
             {
                 QString name = card->getName();
-                emit hover(name);
+                QString description = card->getDescription();
+                emit hover(name, description);
             });
         enemydeckarea->response_addCard(card);
         break;
@@ -201,7 +202,8 @@
         connect(card, &Card::hover, [=]()
             {
                 QString name = card->getName();
-                emit hover(name);
+                QString description = card->getDescription();
+                emit hover(name, description);
             });
 
         connect(card, &Card::normalSummon, [=]()
@@ -280,13 +282,13 @@
             responsible = true;
         }
     }
-    for (Card* card : fieldgroundarea->getMyFieldground())
-    {
-        if (card->testEffect())
-        {
-            responsible = true;
-        }
-    }
+//    for (Card* card : fieldgroundarea->getMyFieldground()) //鏆傛椂杩樻病鏈夊悗鍦洪瓟闄峰崱
+//    {
+//        if (card->testEffect())
+//        {
+//            responsible = true;
+//        }
+//    }
 
     if (!responsible)
     {
Index: roomscene.h
===================================================================
--- roomscene.h	(版本 16)
+++ roomscene.h	(工作副本)
@@ -34,7 +34,7 @@
 //    void mouseReleaseEvent(QGraphicsSceneMouseEvent* event);
 
 signals:
-    void hover(QString);
+    void hover(QString,QString);
 
 public slots:
     void actionBP(bool);
